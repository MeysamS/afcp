// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Annual_faculty_promotions.WebUI.Areas.UserArea.Controllers
{
    public partial class CartableController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected CartableController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Send()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Send);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SendRequest()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendRequest);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Archive()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Archive);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetOldTechnology()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetOldTechnology);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetNewTechnology()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNewTechnology);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SaveTemporary()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveTemporary);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Return()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Return);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetEducation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetEducation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Educational()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Educational);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult FurtherInformation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FurtherInformation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OpenAttachsFromFurtherInformation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OpenAttachsFromFurtherInformation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetResearch()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetResearch);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Research()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Research);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetDissertation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetDissertation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Dissertation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Dissertation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetTechnology()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetTechnology);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Technology()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Technology);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetScientificExecutive()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetScientificExecutive);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ScientificExecutive()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ScientificExecutive);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetTrakingsByRequestId()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetTrakingsByRequestId);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateEducationReasearch()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateEducationReasearch);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateDissertation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDissertation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateScientificExecutive()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateScientificExecutive);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateTechnology()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateTechnology);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CartableController Actions { get { return MVC.UserArea.Cartable; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "UserArea";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Cartable";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Cartable";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string GetCartables = "GetCartables";
            public readonly string Send = "Send";
            public readonly string SendRequest = "SendRequest";
            public readonly string Archive = "Archive";
            public readonly string GetOldTechnology = "GetOldTechnology";
            public readonly string GetNewTechnology = "GetNewTechnology";
            public readonly string SaveTemporary = "SaveTemporary";
            public readonly string Return = "Return";
            public readonly string GetEducation = "GetEducation";
            public readonly string Educational = "Educational";
            public readonly string FurtherInformation = "FurtherInformation";
            public readonly string OpenAttachsFromFurtherInformation = "OpenAttachsFromFurtherInformation";
            public readonly string GetResearch = "GetResearch";
            public readonly string Research = "Research";
            public readonly string GetDissertation = "GetDissertation";
            public readonly string Dissertation = "Dissertation";
            public readonly string GetTechnology = "GetTechnology";
            public readonly string Technology = "Technology";
            public readonly string GetScientificExecutive = "GetScientificExecutive";
            public readonly string ScientificExecutive = "ScientificExecutive";
            public readonly string TrackingRequest = "TrackingRequest";
            public readonly string GetTrakingsByRequestId = "GetTrakingsByRequestId";
            public readonly string MyArchive = "MyArchive";
            public readonly string GetArchives = "GetArchives";
            public readonly string UpdateEducationReasearch = "UpdateEducationReasearch";
            public readonly string UpdateDissertation = "UpdateDissertation";
            public readonly string UpdateScientificExecutive = "UpdateScientificExecutive";
            public readonly string UpdateTechnology = "UpdateTechnology";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string GetCartables = "GetCartables";
            public const string Send = "Send";
            public const string SendRequest = "SendRequest";
            public const string Archive = "Archive";
            public const string GetOldTechnology = "GetOldTechnology";
            public const string GetNewTechnology = "GetNewTechnology";
            public const string SaveTemporary = "SaveTemporary";
            public const string Return = "Return";
            public const string GetEducation = "GetEducation";
            public const string Educational = "Educational";
            public const string FurtherInformation = "FurtherInformation";
            public const string OpenAttachsFromFurtherInformation = "OpenAttachsFromFurtherInformation";
            public const string GetResearch = "GetResearch";
            public const string Research = "Research";
            public const string GetDissertation = "GetDissertation";
            public const string Dissertation = "Dissertation";
            public const string GetTechnology = "GetTechnology";
            public const string Technology = "Technology";
            public const string GetScientificExecutive = "GetScientificExecutive";
            public const string ScientificExecutive = "ScientificExecutive";
            public const string TrackingRequest = "TrackingRequest";
            public const string GetTrakingsByRequestId = "GetTrakingsByRequestId";
            public const string MyArchive = "MyArchive";
            public const string GetArchives = "GetArchives";
            public const string UpdateEducationReasearch = "UpdateEducationReasearch";
            public const string UpdateDissertation = "UpdateDissertation";
            public const string UpdateScientificExecutive = "UpdateScientificExecutive";
            public const string UpdateTechnology = "UpdateTechnology";
        }


        static readonly ActionParamsClass_Send s_params_Send = new ActionParamsClass_Send();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Send SendParams { get { return s_params_Send; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Send
        {
            public readonly string cartableId = "cartableId";
            public readonly string desc = "desc";
        }
        static readonly ActionParamsClass_SendRequest s_params_SendRequest = new ActionParamsClass_SendRequest();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SendRequest SendRequestParams { get { return s_params_SendRequest; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SendRequest
        {
            public readonly string requestId = "requestId";
            public readonly string desc = "desc";
        }
        static readonly ActionParamsClass_Archive s_params_Archive = new ActionParamsClass_Archive();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Archive ArchiveParams { get { return s_params_Archive; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Archive
        {
            public readonly string cartableId = "cartableId";
            public readonly string oldTech = "oldTech";
            public readonly string newTech = "newTech";
            public readonly string archive = "archive";
        }
        static readonly ActionParamsClass_GetOldTechnology s_params_GetOldTechnology = new ActionParamsClass_GetOldTechnology();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetOldTechnology GetOldTechnologyParams { get { return s_params_GetOldTechnology; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetOldTechnology
        {
            public readonly string requestId = "requestId";
        }
        static readonly ActionParamsClass_GetNewTechnology s_params_GetNewTechnology = new ActionParamsClass_GetNewTechnology();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetNewTechnology GetNewTechnologyParams { get { return s_params_GetNewTechnology; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetNewTechnology
        {
            public readonly string requestId = "requestId";
        }
        static readonly ActionParamsClass_SaveTemporary s_params_SaveTemporary = new ActionParamsClass_SaveTemporary();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveTemporary SaveTemporaryParams { get { return s_params_SaveTemporary; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveTemporary
        {
            public readonly string oldTech = "oldTech";
            public readonly string newTech = "newTech";
            public readonly string archive = "archive";
            public readonly string cartableId = "cartableId";
        }
        static readonly ActionParamsClass_Return s_params_Return = new ActionParamsClass_Return();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Return ReturnParams { get { return s_params_Return; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Return
        {
            public readonly string cartableId = "cartableId";
            public readonly string desc = "desc";
        }
        static readonly ActionParamsClass_GetEducation s_params_GetEducation = new ActionParamsClass_GetEducation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetEducation GetEducationParams { get { return s_params_GetEducation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetEducation
        {
            public readonly string requestid = "requestid";
        }
        static readonly ActionParamsClass_Educational s_params_Educational = new ActionParamsClass_Educational();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Educational EducationalParams { get { return s_params_Educational; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Educational
        {
            public readonly string requestId = "requestId";
            public readonly string roleName = "roleName";
        }
        static readonly ActionParamsClass_FurtherInformation s_params_FurtherInformation = new ActionParamsClass_FurtherInformation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FurtherInformation FurtherInformationParams { get { return s_params_FurtherInformation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FurtherInformation
        {
            public readonly string requestId = "requestId";
        }
        static readonly ActionParamsClass_OpenAttachsFromFurtherInformation s_params_OpenAttachsFromFurtherInformation = new ActionParamsClass_OpenAttachsFromFurtherInformation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_OpenAttachsFromFurtherInformation OpenAttachsFromFurtherInformationParams { get { return s_params_OpenAttachsFromFurtherInformation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_OpenAttachsFromFurtherInformation
        {
            public readonly string furtherInformationId = "furtherInformationId";
            public readonly string furtherInformationType = "furtherInformationType";
        }
        static readonly ActionParamsClass_GetResearch s_params_GetResearch = new ActionParamsClass_GetResearch();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetResearch GetResearchParams { get { return s_params_GetResearch; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetResearch
        {
            public readonly string requestid = "requestid";
        }
        static readonly ActionParamsClass_Research s_params_Research = new ActionParamsClass_Research();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Research ResearchParams { get { return s_params_Research; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Research
        {
            public readonly string requestId = "requestId";
            public readonly string roleName = "roleName";
        }
        static readonly ActionParamsClass_GetDissertation s_params_GetDissertation = new ActionParamsClass_GetDissertation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetDissertation GetDissertationParams { get { return s_params_GetDissertation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetDissertation
        {
            public readonly string requestid = "requestid";
        }
        static readonly ActionParamsClass_Dissertation s_params_Dissertation = new ActionParamsClass_Dissertation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Dissertation DissertationParams { get { return s_params_Dissertation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Dissertation
        {
            public readonly string requestId = "requestId";
            public readonly string roleName = "roleName";
        }
        static readonly ActionParamsClass_GetTechnology s_params_GetTechnology = new ActionParamsClass_GetTechnology();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetTechnology GetTechnologyParams { get { return s_params_GetTechnology; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetTechnology
        {
            public readonly string requestid = "requestid";
        }
        static readonly ActionParamsClass_Technology s_params_Technology = new ActionParamsClass_Technology();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Technology TechnologyParams { get { return s_params_Technology; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Technology
        {
            public readonly string requestId = "requestId";
            public readonly string roleName = "roleName";
        }
        static readonly ActionParamsClass_GetScientificExecutive s_params_GetScientificExecutive = new ActionParamsClass_GetScientificExecutive();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetScientificExecutive GetScientificExecutiveParams { get { return s_params_GetScientificExecutive; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetScientificExecutive
        {
            public readonly string requestid = "requestid";
        }
        static readonly ActionParamsClass_ScientificExecutive s_params_ScientificExecutive = new ActionParamsClass_ScientificExecutive();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ScientificExecutive ScientificExecutiveParams { get { return s_params_ScientificExecutive; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ScientificExecutive
        {
            public readonly string requestId = "requestId";
            public readonly string roleName = "roleName";
        }
        static readonly ActionParamsClass_GetTrakingsByRequestId s_params_GetTrakingsByRequestId = new ActionParamsClass_GetTrakingsByRequestId();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetTrakingsByRequestId GetTrakingsByRequestIdParams { get { return s_params_GetTrakingsByRequestId; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetTrakingsByRequestId
        {
            public readonly string reqId = "reqId";
        }
        static readonly ActionParamsClass_UpdateEducationReasearch s_params_UpdateEducationReasearch = new ActionParamsClass_UpdateEducationReasearch();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateEducationReasearch UpdateEducationReasearchParams { get { return s_params_UpdateEducationReasearch; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateEducationReasearch
        {
            public readonly string educationalResearch = "educationalResearch";
        }
        static readonly ActionParamsClass_UpdateDissertation s_params_UpdateDissertation = new ActionParamsClass_UpdateDissertation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateDissertation UpdateDissertationParams { get { return s_params_UpdateDissertation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateDissertation
        {
            public readonly string dissertation = "dissertation";
        }
        static readonly ActionParamsClass_UpdateScientificExecutive s_params_UpdateScientificExecutive = new ActionParamsClass_UpdateScientificExecutive();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateScientificExecutive UpdateScientificExecutiveParams { get { return s_params_UpdateScientificExecutive; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateScientificExecutive
        {
            public readonly string scientificExecutive = "scientificExecutive";
        }
        static readonly ActionParamsClass_UpdateTechnology s_params_UpdateTechnology = new ActionParamsClass_UpdateTechnology();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateTechnology UpdateTechnologyParams { get { return s_params_UpdateTechnology; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateTechnology
        {
            public readonly string technology = "technology";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _AttachFurtherInformations = "_AttachFurtherInformations";
                public readonly string _GetTrakings = "_GetTrakings";
                public readonly string Archive = "Archive";
                public readonly string Dissertation = "Dissertation";
                public readonly string Educational = "Educational";
                public readonly string FurtherInformation = "FurtherInformation";
                public readonly string Index = "Index";
                public readonly string MyArchive = "MyArchive";
                public readonly string Research = "Research";
                public readonly string ScientificExecutive = "ScientificExecutive";
                public readonly string Technology = "Technology";
                public readonly string TrackingRequest = "TrackingRequest";
            }
            public readonly string _AttachFurtherInformations = "~/Areas/UserArea/Views/Cartable/_AttachFurtherInformations.cshtml";
            public readonly string _GetTrakings = "~/Areas/UserArea/Views/Cartable/_GetTrakings.cshtml";
            public readonly string Archive = "~/Areas/UserArea/Views/Cartable/Archive.cshtml";
            public readonly string Dissertation = "~/Areas/UserArea/Views/Cartable/Dissertation.cshtml";
            public readonly string Educational = "~/Areas/UserArea/Views/Cartable/Educational.cshtml";
            public readonly string FurtherInformation = "~/Areas/UserArea/Views/Cartable/FurtherInformation.cshtml";
            public readonly string Index = "~/Areas/UserArea/Views/Cartable/Index.cshtml";
            public readonly string MyArchive = "~/Areas/UserArea/Views/Cartable/MyArchive.cshtml";
            public readonly string Research = "~/Areas/UserArea/Views/Cartable/Research.cshtml";
            public readonly string ScientificExecutive = "~/Areas/UserArea/Views/Cartable/ScientificExecutive.cshtml";
            public readonly string Technology = "~/Areas/UserArea/Views/Cartable/Technology.cshtml";
            public readonly string TrackingRequest = "~/Areas/UserArea/Views/Cartable/TrackingRequest.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_CartableController : Annual_faculty_promotions.WebUI.Areas.UserArea.Controllers.CartableController
    {
        public T4MVC_CartableController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetCartablesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetCartables()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetCartables);
            GetCartablesOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SendOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long cartableId, string desc);

        [NonAction]
        public override System.Web.Mvc.ActionResult Send(long cartableId, string desc)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Send);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "cartableId", cartableId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "desc", desc);
            SendOverride(callInfo, cartableId, desc);
            return callInfo;
        }

        [NonAction]
        partial void SendRequestOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId, string desc);

        [NonAction]
        public override System.Web.Mvc.ActionResult SendRequest(long requestId, string desc)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendRequest);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "desc", desc);
            SendRequestOverride(callInfo, requestId, desc);
            return callInfo;
        }

        [NonAction]
        partial void ArchiveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long cartableId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Archive(long cartableId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Archive);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "cartableId", cartableId);
            ArchiveOverride(callInfo, cartableId);
            return callInfo;
        }

        [NonAction]
        partial void GetOldTechnologyOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetOldTechnology(long requestId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetOldTechnology);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            GetOldTechnologyOverride(callInfo, requestId);
            return callInfo;
        }

        [NonAction]
        partial void GetNewTechnologyOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetNewTechnology(long requestId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetNewTechnology);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            GetNewTechnologyOverride(callInfo, requestId);
            return callInfo;
        }

        [NonAction]
        partial void SaveTemporaryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string oldTech, string newTech, Annual_faculty_promotions.Core.Domain.Archive archive, long cartableId);

        [NonAction]
        public override System.Web.Mvc.ActionResult SaveTemporary(string oldTech, string newTech, Annual_faculty_promotions.Core.Domain.Archive archive, long cartableId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveTemporary);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "oldTech", oldTech);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "newTech", newTech);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "archive", archive);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "cartableId", cartableId);
            SaveTemporaryOverride(callInfo, oldTech, newTech, archive, cartableId);
            return callInfo;
        }

        [NonAction]
        partial void ArchiveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string oldTech, string newTech, Annual_faculty_promotions.Core.Domain.Archive archive, long cartableId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Archive(string oldTech, string newTech, Annual_faculty_promotions.Core.Domain.Archive archive, long cartableId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Archive);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "oldTech", oldTech);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "newTech", newTech);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "archive", archive);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "cartableId", cartableId);
            ArchiveOverride(callInfo, oldTech, newTech, archive, cartableId);
            return callInfo;
        }

        [NonAction]
        partial void ReturnOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long cartableId, string desc);

        [NonAction]
        public override System.Web.Mvc.ActionResult Return(long cartableId, string desc)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Return);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "cartableId", cartableId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "desc", desc);
            ReturnOverride(callInfo, cartableId, desc);
            return callInfo;
        }

        [NonAction]
        partial void GetEducationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestid);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetEducation(long requestid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetEducation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestid", requestid);
            GetEducationOverride(callInfo, requestid);
            return callInfo;
        }

        [NonAction]
        partial void EducationalOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId, string roleName);

        [NonAction]
        public override System.Web.Mvc.ActionResult Educational(long requestId, string roleName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Educational);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "roleName", roleName);
            EducationalOverride(callInfo, requestId, roleName);
            return callInfo;
        }

        [NonAction]
        partial void FurtherInformationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId);

        [NonAction]
        public override System.Web.Mvc.ActionResult FurtherInformation(long requestId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FurtherInformation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            FurtherInformationOverride(callInfo, requestId);
            return callInfo;
        }

        [NonAction]
        partial void OpenAttachsFromFurtherInformationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long furtherInformationId, int furtherInformationType);

        [NonAction]
        public override System.Web.Mvc.ActionResult OpenAttachsFromFurtherInformation(long furtherInformationId, int furtherInformationType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OpenAttachsFromFurtherInformation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "furtherInformationId", furtherInformationId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "furtherInformationType", furtherInformationType);
            OpenAttachsFromFurtherInformationOverride(callInfo, furtherInformationId, furtherInformationType);
            return callInfo;
        }

        [NonAction]
        partial void GetResearchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestid);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetResearch(long requestid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetResearch);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestid", requestid);
            GetResearchOverride(callInfo, requestid);
            return callInfo;
        }

        [NonAction]
        partial void ResearchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId, string roleName);

        [NonAction]
        public override System.Web.Mvc.ActionResult Research(long requestId, string roleName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Research);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "roleName", roleName);
            ResearchOverride(callInfo, requestId, roleName);
            return callInfo;
        }

        [NonAction]
        partial void GetDissertationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestid);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetDissertation(long requestid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetDissertation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestid", requestid);
            GetDissertationOverride(callInfo, requestid);
            return callInfo;
        }

        [NonAction]
        partial void DissertationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId, string roleName);

        [NonAction]
        public override System.Web.Mvc.ActionResult Dissertation(long requestId, string roleName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Dissertation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "roleName", roleName);
            DissertationOverride(callInfo, requestId, roleName);
            return callInfo;
        }

        [NonAction]
        partial void GetTechnologyOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestid);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetTechnology(long requestid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetTechnology);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestid", requestid);
            GetTechnologyOverride(callInfo, requestid);
            return callInfo;
        }

        [NonAction]
        partial void TechnologyOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId, string roleName);

        [NonAction]
        public override System.Web.Mvc.ActionResult Technology(long requestId, string roleName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Technology);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "roleName", roleName);
            TechnologyOverride(callInfo, requestId, roleName);
            return callInfo;
        }

        [NonAction]
        partial void GetScientificExecutiveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestid);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetScientificExecutive(long requestid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetScientificExecutive);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestid", requestid);
            GetScientificExecutiveOverride(callInfo, requestid);
            return callInfo;
        }

        [NonAction]
        partial void ScientificExecutiveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long requestId, string roleName);

        [NonAction]
        public override System.Web.Mvc.ActionResult ScientificExecutive(long requestId, string roleName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ScientificExecutive);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "requestId", requestId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "roleName", roleName);
            ScientificExecutiveOverride(callInfo, requestId, roleName);
            return callInfo;
        }

        [NonAction]
        partial void TrackingRequestOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult TrackingRequest()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TrackingRequest);
            TrackingRequestOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetTrakingsByRequestIdOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long reqId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetTrakingsByRequestId(long reqId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetTrakingsByRequestId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "reqId", reqId);
            GetTrakingsByRequestIdOverride(callInfo, reqId);
            return callInfo;
        }

        [NonAction]
        partial void MyArchiveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult MyArchive()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MyArchive);
            MyArchiveOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetArchivesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetArchives()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetArchives);
            GetArchivesOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void UpdateEducationReasearchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Annual_faculty_promotions.Core.Domain.EducationalResearch educationalResearch);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateEducationReasearch(Annual_faculty_promotions.Core.Domain.EducationalResearch educationalResearch)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateEducationReasearch);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "educationalResearch", educationalResearch);
            UpdateEducationReasearchOverride(callInfo, educationalResearch);
            return callInfo;
        }

        [NonAction]
        partial void UpdateDissertationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Annual_faculty_promotions.Core.Domain.Dissertation dissertation);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateDissertation(Annual_faculty_promotions.Core.Domain.Dissertation dissertation)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDissertation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dissertation", dissertation);
            UpdateDissertationOverride(callInfo, dissertation);
            return callInfo;
        }

        [NonAction]
        partial void UpdateScientificExecutiveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Annual_faculty_promotions.Core.Domain.ScientificExecutive scientificExecutive);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateScientificExecutive(Annual_faculty_promotions.Core.Domain.ScientificExecutive scientificExecutive)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateScientificExecutive);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "scientificExecutive", scientificExecutive);
            UpdateScientificExecutiveOverride(callInfo, scientificExecutive);
            return callInfo;
        }

        [NonAction]
        partial void UpdateTechnologyOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Annual_faculty_promotions.Core.Domain.Technology technology);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateTechnology(Annual_faculty_promotions.Core.Domain.Technology technology)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateTechnology);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "technology", technology);
            UpdateTechnologyOverride(callInfo, technology);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
