// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Annual_faculty_promotions.WebUI.Controllers
{
    public partial class HomeController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected HomeController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> IsEmailExist()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.IsEmailExist);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CompareCaptcha()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CompareCaptcha);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> IsEmailConfirmed()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.IsEmailConfirmed);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult HasValidCodeMeli()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HasValidCodeMeli);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult HasValidCodeEstekhdami()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HasValidCodeEstekhdami);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public HomeController Actions { get { return MVC.Home; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Home";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Home";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string IsEmailExist = "IsEmailExist";
            public readonly string CompareCaptcha = "CompareCaptcha";
            public readonly string IsEmailConfirmed = "IsEmailConfirmed";
            public readonly string HasValidCodeMeli = "HasValidCodeMeli";
            public readonly string HasValidCodeEstekhdami = "HasValidCodeEstekhdami";
            public readonly string Image = "Image";
            public readonly string ImageJson = "ImageJson";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string IsEmailExist = "IsEmailExist";
            public const string CompareCaptcha = "CompareCaptcha";
            public const string IsEmailConfirmed = "IsEmailConfirmed";
            public const string HasValidCodeMeli = "HasValidCodeMeli";
            public const string HasValidCodeEstekhdami = "HasValidCodeEstekhdami";
            public const string Image = "Image";
            public const string ImageJson = "ImageJson";
        }


        static readonly ActionParamsClass_IsEmailExist s_params_IsEmailExist = new ActionParamsClass_IsEmailExist();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_IsEmailExist IsEmailExistParams { get { return s_params_IsEmailExist; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_IsEmailExist
        {
            public readonly string email = "email";
        }
        static readonly ActionParamsClass_CompareCaptcha s_params_CompareCaptcha = new ActionParamsClass_CompareCaptcha();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CompareCaptcha CompareCaptchaParams { get { return s_params_CompareCaptcha; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CompareCaptcha
        {
            public readonly string captcha = "captcha";
        }
        static readonly ActionParamsClass_IsEmailConfirmed s_params_IsEmailConfirmed = new ActionParamsClass_IsEmailConfirmed();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_IsEmailConfirmed IsEmailConfirmedParams { get { return s_params_IsEmailConfirmed; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_IsEmailConfirmed
        {
            public readonly string email = "email";
        }
        static readonly ActionParamsClass_HasValidCodeMeli s_params_HasValidCodeMeli = new ActionParamsClass_HasValidCodeMeli();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_HasValidCodeMeli HasValidCodeMeliParams { get { return s_params_HasValidCodeMeli; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_HasValidCodeMeli
        {
            public readonly string codeMeli = "codeMeli";
        }
        static readonly ActionParamsClass_HasValidCodeEstekhdami s_params_HasValidCodeEstekhdami = new ActionParamsClass_HasValidCodeEstekhdami();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_HasValidCodeEstekhdami HasValidCodeEstekhdamiParams { get { return s_params_HasValidCodeEstekhdami; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_HasValidCodeEstekhdami
        {
            public readonly string codeEstekhdam = "codeEstekhdam";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_HomeController : Annual_faculty_promotions.WebUI.Controllers.HomeController
    {
        public T4MVC_HomeController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IsEmailExistOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string email);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> IsEmailExist(string email)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.IsEmailExist);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "email", email);
            IsEmailExistOverride(callInfo, email);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void CompareCaptchaOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string captcha);

        [NonAction]
        public override System.Web.Mvc.ActionResult CompareCaptcha(string captcha)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CompareCaptcha);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "captcha", captcha);
            CompareCaptchaOverride(callInfo, captcha);
            return callInfo;
        }

        [NonAction]
        partial void IsEmailConfirmedOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string email);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> IsEmailConfirmed(string email)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.IsEmailConfirmed);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "email", email);
            IsEmailConfirmedOverride(callInfo, email);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void HasValidCodeMeliOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long codeMeli);

        [NonAction]
        public override System.Web.Mvc.ActionResult HasValidCodeMeli(long codeMeli)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HasValidCodeMeli);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "codeMeli", codeMeli);
            HasValidCodeMeliOverride(callInfo, codeMeli);
            return callInfo;
        }

        [NonAction]
        partial void HasValidCodeEstekhdamiOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string codeEstekhdam);

        [NonAction]
        public override System.Web.Mvc.ActionResult HasValidCodeEstekhdami(string codeEstekhdam)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HasValidCodeEstekhdami);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "codeEstekhdam", codeEstekhdam);
            HasValidCodeEstekhdamiOverride(callInfo, codeEstekhdam);
            return callInfo;
        }

        [NonAction]
        partial void ImageOverride(T4MVC_Annual_faculty_promotions_WebUI_Models_Captcha_CaptchImageAction callInfo);

        [NonAction]
        public override Annual_faculty_promotions.WebUI.Models.Captcha.CaptchImageAction Image()
        {
            var callInfo = new T4MVC_Annual_faculty_promotions_WebUI_Models_Captcha_CaptchImageAction(Area, Name, ActionNames.Image);
            ImageOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ImageJsonOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

        [NonAction]
        public override System.Web.Mvc.JsonResult ImageJson()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ImageJson);
            ImageJsonOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
